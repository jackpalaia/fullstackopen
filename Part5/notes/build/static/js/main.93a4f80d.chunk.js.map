{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","type","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","require","login","credentials","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","returnedNote","concat","handleLogin","loginService","setItem","stringify","setTimeout","handleNoteChange","target","value","notesToShow","filter","onSubmit","name","onChange","map","i","key","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93a4f80d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important'\r\n    : 'make important';\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, setToken }","const axios = require('axios')\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/notes'\r\nimport loginService from './services/login' \r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]) \r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n      id: notes.length + 1,\r\n    }\r\n  \r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n  \r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)   \r\n      })\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedNoteappUser', JSON.stringify(user)\r\n      )\r\n      noteService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>      \r\n  )\r\n\r\n  const noteForm = () => (\r\n    <form onSubmit={addNote}>\r\n      <input\r\n        value={newNote}\r\n        onChange={handleNoteChange}\r\n      />\r\n      <button type=\"submit\">save</button>\r\n    </form>  \r\n  )\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n\r\n      {user === null ?\r\n        loginForm() :\r\n        <div>\r\n          <p>{user.name} logged in</p>\r\n          {noteForm()}\r\n        </div>\r\n      }\r\n\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>      \r\n      <ul>\r\n        {notesToShow.map((note, i) => \r\n          <Note\r\n            key={i}\r\n            note={note} \r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}